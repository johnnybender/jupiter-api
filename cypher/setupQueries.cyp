////// *** Setup *** //////

// This was used to load and create nodes for the csv NQF file
LOAD CSV FROM "file:///nqfMeasures.csv" AS line
CREATE (:Measure {title: line[1], nqf: line[2],	description: line[3], numerator: line[4], denominator: line[5], exclusions: line[6], riskAdjustment: line[7], measureType: line[8],	measureFormat: line[9], program: split((line[10]), "," ), condition: split((line[11]), "," ), nonConditionSpecific: split((line[12]), "," ), careSetting: split((line[13]), "," ), nationalQualityStrategyPriorities: line[14], actualPlannedUse: split((line[15]), "," ),	dataSource: split((line[16]), "," ), levelOfAnalysis: split((line[17]), "," ), targetPopulation: split((line[18]), "," ), harmonizationAction: line[19], measuresConsideredInHarmonizationRequest: line[20], updatedDate: line[21], endorsementType: line[22], endorsementDate: line[23], measureUnderReview: line[24], correspondingMeasures: line[25], measureSteward: line[26], measureStewardEmailAddress: line[27], measureStewardWebsiteUrl: line[28], measureDisclaimer: line[29], measureStewardCopyright: line[30], projectShortTitle: line[31]})

// Convert 2016-08-HHS-EDI-JSON.json file to hhs.csv
$ json2csv -i /Users/jb/Documents/Work/DC/ProviderBurden/Jupiter-Project/Modified/NEO4J_HOME/convert/2016-08-HHS-EDI-JSON.json -f conformsTo,distribution.title,issued,modified,publisher.subOrganizationOf.name,landingPage,title,temporal,publisher.subOrganizationOf.type,publisher.subOrganizationOf.subOrganizationOf.name,distribution.mediaType,systemOfRecords,isPartOf,type,describedBy,distribution.describedBy,description,contactPoint.fn,publisher.type,primaryITInvestmentUII,publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.name,publisher.subOrganizationOf.subOrganizationOf.type,contactPoint.type,distribution.conformsTo,accessLevel,distribution.downloadURL,license,rights,spatial,publisher.name,distribution.format,contactPoint.hasEmail,distribution.accessURL,publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.type,distribution.type,accrualPeriodicity,dataQuality,identifier,keyword,bureauCode,language,programCode, -o /Users/jb/Documents/Work/DC/ProviderBurden/Jupiter-Project/Modified/NEO4J_HOME/convert/hhs.csv

// This was used to load and create nodes for the hhs.csv file
LOAD CSV WITH HEADERS FROM "file:///hhs.csv" AS line
CREATE (:Dataset {conformsTo: line.`conformsTo`, distributionTitle: line.`distribution.title`, issued: line.`issued`, modified: line.`modified`, publisherSubOrganizationOfName: line.`publisher.subOrganizationOf.name`, landingPage: line.`landingPage`, title: line.`title`, temporal: line.`temporal`,publisherSubOrganizationOfType: line.`publisher.subOrganizationOf.type`,publisherSubOrganizationOfSubOrganizationOfName: line.`publisher.subOrganizationOf.subOrganizationOf.name`,distributionMediaType: line.`distribution.mediaType`,systemOfRecords: line.`systemOfRecords`,isPartOf: line.`isPartOf`,type: line.`type`,describedBy: line.`describedBy`,distributionDescribedBy: line.`distribution.describedBy`,description: line.`description`,contactPointFn: line.`contactPoint.fn`,publisherType: line.`publisher.type`,primaryITInvestmentUII: line.`primaryITInvestmentUII`,publisherSubOrganizationOfSubOrganizationOfSubOrganizationOfName: line.`publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.name`,publisherSubOrganizationOfSubOrganizationOfType: line.`publisher.subOrganizationOf.subOrganizationOf.type`,contactPointType: line.`contactPoint.type`,distributionConformsTo: line.`distribution.conformsTo`,accessLevel: line.`accessLevel`,distributionDownloadURL: line.`distribution.downloadURL`,license: line.`license`,rights: line.`rights`,spatial: line.`spatial`,publisherName: line.`publisher.name`,distributionFormat: line.`distribution.format`,contactPointHasEmail: line.`contactPoint.hasEmail`,distributionAccessURL: line.`distribution.accessURL`,publisherSubOrganizationOfSubOrganizationOfSubOrganizationOfType: line.`publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.type`,distributionType: line.`distribution.type`,accrualPeriodicity: line.`accrualPeriodicity`,dataQuality: line.`dataQuality`,id: toString(line.`identifier`)})

// This was used to append fields to existing nodes
LOAD CSV WITH HEADERS FROM "file:///hhs.csv" AS line
MATCH (a:Dataset {id: toString(line.`identifier`)})
SET a.keyword = split((line.keyword), ","), a.bureauCode = split((line.bureauCode), ","), a.language = split((line.language), ","), a.programCode = split((line.programCode), ","), a.conformsTo = line.`conformsTo`, a.distributionTitle = line.`distribution.title`, a.issued = line.`issued`, a.modified = line.`modified`, a.publisherSubOrganizationOfName = line.`publisher.subOrganizationOf.name`, a.landingPage = line.`landingPage`, a.title = line.`title`, a.temporal = line.`temporal`, a.publisherSubOrganizationOfType = line.`publisher.subOrganizationOf.type`, a.publisherSubOrganizationOfSubOrganizationOfName = line.`publisher.subOrganizationOf.subOrganizationOf.name`, a.distributionMediaType = line.`distribution.mediaType`, a.systemOfRecords = line.`systemOfRecords`, a.isPartOf = line.`isPartOf`, a.type = line.`type`, a.describedBy = line.`describedBy`, a.distributionDescribedBy = line.`distribution.describedBy`, a.description = line.`description`, a.contactPointFn = line.`contactPoint.fn`, a.publisherType = line.`publisher.type`, a.primaryITInvestmentUII = line.`primaryITInvestmentUII`, a.publisherSubOrganizationOfSubOrganizationOfSubOrganizationOfName = line.`publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.name`, a.publisherSubOrganizationOfSubOrganizationOfType = line.`publisher.subOrganizationOf.subOrganizationOf.type`, a.contactPointType = line.`contactPoint.type`, a.distributionConformsTo = line.`distribution.conformsTo`, a.accessLevel = line.`accessLevel`, a.distributionDownloadURL = line.`distribution.downloadURL`, a.license = line.`license`, a.rights = line.`rights`, a.spatial = line.`spatial`, a.publisherName = line.`publisher.name`, a.distributionFormat = line.`distribution.format`, a.contactPointHasEmail = line.`contactPoint.hasEmail`, a.distributionAccessURL = line.`distribution.accessURL`, a.publisherSubOrganizationOfSubOrganizationOfSubOrganizationOfType = line.`publisher.subOrganizationOf.subOrganizationOf.subOrganizationOf.type`, a.distributionType = line.`distribution.type`, a.accrualPeriodicity = line.`accrualPeriodicity`, a.dataQuality = line.`dataQuality`

// Was used to merge all "Public Health" nodes
MATCH (n:Tag)
WHERE n.name = "Public Health"
WITH n.name AS name, COLLECT(n) AS nodelist, COUNT(*) AS count
WHERE count > 1
CALL apoc.refactor.mergeNodes(nodelist) YIELD node
RETURN node